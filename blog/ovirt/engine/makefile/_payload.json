[{"data":1,"prerenderedAt":280},["Reactive",2],{"content-query-d8dBy0JJxG":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":7,"body":9,"_type":275,"_id":276,"_source":277,"_file":278,"_extension":279},"/blog/ovirt/engine/makefile","engine",false,"","ovirt-engine Makefile",{"type":10,"children":11,"toc":262},"root",[12,20,26,32,37,70,75,80,103,109,115,120,157,162,167,172,176,181,186,204,209,242,248,253],{"type":13,"tag":14,"props":15,"children":17},"element","h1",{"id":16},"ovirt-engine-makefile",[18],{"type":19,"value":8},"text",{"type":13,"tag":21,"props":22,"children":24},"h2",{"id":23},"前言",[25],{"type":19,"value":23},{"type":13,"tag":27,"props":28,"children":29},"p",{},[30],{"type":19,"value":31},"make 命令是GNU的工程化的编译工具，用于编译众多相互关联的源代码，通过工程化的管理来提供开发效率。ovirt-engine项目中有一个Makefile，这是理解项目代码的入口。",{"type":13,"tag":21,"props":33,"children":35},{"id":34},"make",[36],{"type":19,"value":34},{"type":13,"tag":27,"props":38,"children":39},{},[40,42,51,53,60,61,68],{"type":19,"value":41},"make本身的资料很多，",{"type":13,"tag":43,"props":44,"children":48},"a",{"href":45,"rel":46},"https://www.gnu.org/software/make/manual/make.html",[47],"nofollow",[49],{"type":19,"value":50},"官网",{"type":19,"value":52},",",{"type":13,"tag":43,"props":54,"children":57},{"href":55,"rel":56},"http://www.ruanyifeng.com/blog/2015/02/make.html",[47],[58],{"type":19,"value":59},"参考1",{"type":19,"value":52},{"type":13,"tag":43,"props":62,"children":65},{"href":63,"rel":64},"https://docs.huihoo.com/gnu/linux/gmake.html",[47],[66],{"type":19,"value":67},"参考2",{"type":19,"value":69},"。",{"type":13,"tag":27,"props":71,"children":72},{},[73],{"type":19,"value":74},"个人理解，可以把make看做一个将先定义任务再将任务拆分成小任务的工具，它有自己的简单语法和规则帮助你完成拆分和组织工作。它和bash配合紧密，我们可以通过bash和其他的工具、命令、语言来统筹配合完成更多的事情。",{"type":13,"tag":27,"props":76,"children":77},{},[78],{"type":19,"value":79},"就以ovirt-engine为例， engine使用了make命令来完成各类任务，如配置开发环境(install-dev)、打包(rpm)、开启gwt调试(gwt-debug)等。但后面实际的工作可能是mvn、rpmbuild、linux command、linux shell、python来完成的，make提供了入口，它定义并拆分了任务，再交由其他工具来完成具体的小任务。",{"type":13,"tag":27,"props":81,"children":82},{},[83,85,92,94,101],{"type":19,"value":84},"在工程组织方面，make只提供了最基础的功能，诸如",{"type":13,"tag":43,"props":86,"children":89},{"href":87,"rel":88},"https://cmake.org/",[47],[90],{"type":19,"value":91},"cmake",{"type":19,"value":93},"、",{"type":13,"tag":43,"props":95,"children":98},{"href":96,"rel":97},"https://www.gnu.org/software/automake/",[47],[99],{"type":19,"value":100},"automake",{"type":19,"value":102},"等工具则更加强大，但不是本文覆盖的范围，感兴趣的同志请自行阅读。",{"type":13,"tag":21,"props":104,"children":106},{"id":105},"makefile",[107],{"type":19,"value":108},"Makefile",{"type":13,"tag":110,"props":111,"children":113},"h3",{"id":112},"控制参数",[114],{"type":19,"value":112},{"type":13,"tag":27,"props":116,"children":117},{},[118],{"type":19,"value":119},"engine在makefile 的开始 定义了很多控制参数，这些控制参数可以来影响make的流程。",{"type":13,"tag":121,"props":122,"children":123},"ul",{},[124,130,135,147,152],{"type":13,"tag":125,"props":126,"children":127},"li",{},[128],{"type":19,"value":129},"BUILD_UT  是否开启单元测试",{"type":13,"tag":125,"props":131,"children":132},{},[133],{"type":19,"value":134},"BUILD_VALIDATION 是否进有效性检查。(shell-check.sh\\image-check.sh\\dbscripts-duplicate _upgrade _stripts.sh)",{"type":13,"tag":125,"props":136,"children":137},{},[138,140],{"type":19,"value":139},"DEV_BUILD _GWT _SUPER _DEV _MODE  是否开启",{"type":13,"tag":43,"props":141,"children":144},{"href":142,"rel":143},"http://www.gwtproject.org/articles/superdevmode.html",[47],[145],{"type":19,"value":146},"GWT super Dev mode",{"type":13,"tag":125,"props":148,"children":149},{},[150],{"type":19,"value":151},"BUILD _ALL _USER _AGENTS  是否编译全部的浏览器代理类型",{"type":13,"tag":125,"props":153,"children":154},{},[155],{"type":19,"value":156},"等等",{"type":13,"tag":110,"props":158,"children":160},{"id":159},"目录层级定义",[161],{"type":19,"value":159},{"type":13,"tag":27,"props":163,"children":164},{},[165],{"type":19,"value":166},"//略",{"type":13,"tag":110,"props":168,"children":170},{"id":169},"变量",[171],{"type":19,"value":169},{"type":13,"tag":27,"props":173,"children":174},{},[175],{"type":19,"value":166},{"type":13,"tag":110,"props":177,"children":179},{"id":178},"目标",[180],{"type":19,"value":178},{"type":13,"tag":27,"props":182,"children":183},{},[184],{"type":19,"value":185},"engine项目汇总的makefile里面定义了很多目标，开发者用的最多的应该是make install-dev 、make dist 、 make clean",{"type":13,"tag":121,"props":187,"children":188},{},[189,194,199],{"type":13,"tag":125,"props":190,"children":191},{},[192],{"type":19,"value":193},"make install-dev 负责安装ovirt-engine到一个PREFIX目录，如果是prod部署状态 这个PREFIX是 / 根目录。相应的，在install-dev的dev部署模式中，*.in文件中的变量都会替换成PREFIX的相对路径，这样就可以直接通过 $PREFIX/bin/engine-setup 来启动配置初始化工作 或 $PREFIX/xxxx/ovirt-engine.py start来启动系统服务等。",{"type":13,"tag":125,"props":195,"children":196},{},[197],{"type":19,"value":198},"make dist 则是修改ovirt-engine.spec.in文件,具备rpmbuild的条件",{"type":13,"tag":125,"props":200,"children":201},{},[202],{"type":19,"value":203},"make clean 是执行mvn clean 和 rm $(BUILD _FILE) ${GENERATED _FILE)， 完成清理工作",{"type":13,"tag":27,"props":205,"children":206},{},[207],{"type":19,"value":208},"除此之花还包括很多其他任务目标，如：",{"type":13,"tag":121,"props":210,"children":211},{},[212,217,222,227,232,237],{"type":13,"tag":125,"props":213,"children":214},{},[215],{"type":19,"value":216},".in: 替换变量的占位符成实际计算出来的值",{"type":13,"tag":125,"props":218,"children":219},{},[220],{"type":19,"value":221},"maven ： 传入 对应的otps或flags ，执行mvn install",{"type":13,"tag":125,"props":223,"children":224},{},[225],{"type":19,"value":226},"copy-recursive: 地柜地将源目录文件复制到目的位置",{"type":13,"tag":125,"props":228,"children":229},{},[230],{"type":19,"value":231},"install-packaging-files ： 将项目中的packaging目录 下为文件放到各自的指定目录 ，如  etc/pki/bin/services/dbscripts/pythonlib等",{"type":13,"tag":125,"props":233,"children":234},{},[235],{"type":19,"value":236},"install-layout: 建立目录结构、文件结构",{"type":13,"tag":125,"props":238,"children":239},{},[240],{"type":19,"value":241},"等",{"type":13,"tag":21,"props":243,"children":245},{"id":244},"engine-makefile",[246],{"type":19,"value":247},"engine makefile",{"type":13,"tag":27,"props":249,"children":250},{},[251],{"type":19,"value":252},"整理后的xmind",{"type":13,"tag":27,"props":254,"children":255},{},[256],{"type":13,"tag":257,"props":258,"children":261},"img",{"alt":259,"src":260},"ovirt-engine-4.3-makefile-xmind","https://github.com/ShaneDean/file/raw/7ca6fbc6e895ea99af34e66b945e257dc3ae8888/blog/ovirt_engine_env/ovirt-engine-Makefile.png",[],{"title":7,"searchDepth":263,"depth":263,"links":264},2,[265,266,267,274],{"id":23,"depth":263,"text":23},{"id":34,"depth":263,"text":34},{"id":105,"depth":263,"text":108,"children":268},[269,271,272,273],{"id":112,"depth":270,"text":112},3,{"id":159,"depth":270,"text":159},{"id":169,"depth":270,"text":169},{"id":178,"depth":270,"text":178},{"id":244,"depth":263,"text":247},"markdown","content:blog:ovirt:engine:makefile.md","content","blog/ovirt/engine/makefile.md","md",1718158598649]