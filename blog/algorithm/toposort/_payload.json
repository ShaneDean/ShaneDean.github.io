[{"data":1,"prerenderedAt":139},["Reactive",2],{"content-query-m78TyqI0aC":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":7,"body":9,"_type":134,"_id":135,"_source":136,"_file":137,"_extension":138},"/blog/algorithm/toposort","algorithm",false,"","拓扑排序",{"type":10,"children":11,"toc":129},"root",[12,19,25,66,71,76,85,90,95,100,105,110,118,123],{"type":13,"tag":14,"props":15,"children":16},"element","h1",{"id":8},[17],{"type":18,"value":8},"text",{"type":13,"tag":20,"props":21,"children":23},"h2",{"id":22},"简介",[24],{"type":18,"value":22},{"type":13,"tag":26,"props":27,"children":28},"p",{},[29,38,45,52,59],{"type":13,"tag":30,"props":31,"children":35},"a",{"href":32,"rel":33},"https://blog.csdn.net/wangdong20/article/details/83443250",[34],"nofollow",[36],{"type":18,"value":37},"参考1",{"type":13,"tag":30,"props":39,"children":42},{"href":40,"rel":41},"http://www.csie.ntnu.edu.tw/~u91029/DirectedAcyclicGraph.html",[34],[43],{"type":18,"value":44},"参考2",{"type":13,"tag":30,"props":46,"children":49},{"href":47,"rel":48},"https://www.geeksforgeeks.org/topological-sorting/",[34],[50],{"type":18,"value":51},"参考3",{"type":13,"tag":30,"props":53,"children":56},{"href":54,"rel":55},"https://oi-wiki.org/graph/topo/",[34],[57],{"type":18,"value":58},"参考4",{"type":13,"tag":30,"props":60,"children":63},{"href":61,"rel":62},"https://blog.csdn.net/lisonglisonglisong/article/details/45543451",[34],[64],{"type":18,"value":65},"参考5",{"type":13,"tag":26,"props":67,"children":68},{},[69],{"type":18,"value":70},"拓扑排序英文为Topological sorting，用于解决给一个图的所有节点排序的问题。",{"type":13,"tag":26,"props":72,"children":73},{},[74],{"type":18,"value":75},"可以用大学选课的例子来解释：",{"type":13,"tag":26,"props":77,"children":78},{},[79],{"type":13,"tag":80,"props":81,"children":84},"img",{"alt":82,"src":83},"cs_major","https://github.com/ShaneDean/file/blob/master/blog/algorithm/algorithm_toposort_computer_science_major.png?raw=true",[],{"type":13,"tag":26,"props":86,"children":87},{},[88],{"type":18,"value":89},"我们要完成一系列任务，单个任务之间可能是依赖关系，比如要完成任务B的前提是完成任务A，每次只能开始能进行的任务。就像完成学校学位所需要完成的课程。拓扑排序就是通关计算机程序来寻找完成这些任务的顺序，还可以延伸到许多不同的问题",{"type":13,"tag":26,"props":91,"children":92},{},[93],{"type":18,"value":94},"假设B任务必须依赖A才能完成，也就是说B一定在A之后完成，即(A,B)表示B依赖于A。",{"type":13,"tag":26,"props":96,"children":97},{},[98],{"type":18,"value":99},"假设我们有任务A B C D E F G",{"type":13,"tag":26,"props":101,"children":102},{},[103],{"type":18,"value":104},"彼此之间的依赖关系为(A,B) (C,D) (A,C) (C,E) (E,G) (F,G) (B,E) (D,F)",{"type":13,"tag":26,"props":106,"children":107},{},[108],{"type":18,"value":109},"可以根据依赖做出如下的图",{"type":13,"tag":26,"props":111,"children":112},{},[113],{"type":13,"tag":80,"props":114,"children":117},{"alt":115,"src":116},"abcdefg","https://github.com/ShaneDean/file/blob/master/blog/algorithm/algorithm_toposort_abcdefg.png?raw=true",[],{"type":13,"tag":26,"props":119,"children":120},{},[121],{"type":18,"value":122},"现在需要计算机程序来输入这些任务以及依赖关系并计算出可行的完成任务顺序来完成所有的这些程序。",{"type":13,"tag":20,"props":124,"children":126},{"id":125},"todo",[127],{"type":18,"value":128},"TODO",{"title":7,"searchDepth":130,"depth":130,"links":131},2,[132,133],{"id":22,"depth":130,"text":22},{"id":125,"depth":130,"text":128},"markdown","content:blog:algorithm:toposort.md","content","blog/algorithm/toposort.md","md",1718158598640]